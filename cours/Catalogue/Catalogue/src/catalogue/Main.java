/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package catalogue;
import java.awt.Image;
import java.awt.Toolkit;
import java.sql.*;
import java.util.ArrayList;
import javax.swing.ImageIcon;

/**
 *
 * @author Bamba Mohamed
 */
public class Main extends javax.swing.JFrame {
    private ConfirmCommande cc;
    private ArrayList<String> listeCode;
    

    public Main() {
        initComponents();
        cc = new ConfirmCommande(this, true);
        listeCode = new ArrayList<>();
        
        // mise en place de l'icône de l'application
        Toolkit tk = Toolkit.getDefaultToolkit();
        Image im = tk.getImage(getClass().getResource("/images/30189-erics-20284bubkaEzio.png"));
        ImageIcon icon = new ImageIcon(im);
        setIconImage(icon.getImage());
    }
    
    public void ajouter() {
        Connection connection = null;
	PreparedStatement requete = null;
        
        try {
            Class.forName("org.postgresql.Driver"); // chargement du pilote (driver) permettant d'accéder au SGBDR
            connection = DriverManager.getConnection("jdbc:postgresql:db_catalogue", "administrator", "administrator"); // chemin de la base, utilisateur, mot de passe
	} catch(ClassNotFoundException e) {
            System.err.println("erreur driver non trouvé");
            e.printStackTrace();
            System.exit(1);
        } catch(SQLException e) {
            System.err.println("erreur SQL au moment de la connection");
            e.printStackTrace();
            System.exit(1);
        } 
        
        String titre = this.titreA.getText();
        String code = this.codeA.getText();
        String tag1 = this.tagA1.getText();
        String tag2 = this.tagA2.getText();
        String tag3 = this.tagA3.getText();
        String tag4 = this.tagA4.getText();
        
        try {
            requete = connection.prepareStatement("insert into listecode(titre, code, tag1, tag2, tag3, tag4) values (?, ?, ?, ?, ?, ?)");
            requete.setString(1, titre); // 1 => 1er point d'interrogation
            requete.setString(2, code); // 2 => 2ème point d'interrogation
            requete.setString(3, tag1); // 3 => 3ème point d'interrogation
            requete.setString(4, tag2); // 4 => 4ème point d'interrogation
            requete.setString(5, tag3);
            requete.setString(6, tag4);
            requete.executeUpdate();
        } catch(SQLException e) {
            e.printStackTrace();
            System.err.println("erreur lors de l'insertion");
            System.exit(1);	
        }
        
        this.titreA.setText("");
        this.codeA.setText("");
        this.tagA1.setText("");
        this.tagA2.setText("");
        this.tagA3.setText("");
        this.tagA4.setText("");
        
    }
    
    public void supprimer() {
        Connection connection = null;
	PreparedStatement requete = null;
        
        try {
            Class.forName("org.postgresql.Driver"); // chargement du pilote (driver) permettant d'accéder au SGBDR
            connection = DriverManager.getConnection("jdbc:postgresql:db_catalogue", "administrator", "administrator"); // chemin de la base, utilisateur, mot de passe
	} catch(ClassNotFoundException e) {
            System.err.println("erreur driver non trouvé");
            e.printStackTrace();
            System.exit(1);
        } catch(SQLException e) {
            System.err.println("erreur SQL au moment de la connection");
            e.printStackTrace();
            System.exit(1);
        }
        
        try {
            requete = connection.prepareStatement("delete from listecode where titre = ?");
            requete.setString(1, this.resultatTitre.getText());
            requete.executeUpdate();
        } catch(SQLException e) {
            e.printStackTrace();
            System.err.println("erreur lors de la suppression");
            System.exit(1);	
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        titreA = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        codeA = new javax.swing.JTextArea();
        tagA1 = new javax.swing.JTextField();
        tagA2 = new javax.swing.JTextField();
        tagA3 = new javax.swing.JTextField();
        tagA4 = new javax.swing.JTextField();
        ajouterDB = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        titreR = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        boutonSupprimer = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        affichageCodeR = new javax.swing.JTextArea();
        resultatTitre = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel4.setText("Titre");

        jLabel5.setText("Code");

        codeA.setColumns(20);
        codeA.setRows(5);
        jScrollPane2.setViewportView(codeA);

        ajouterDB.setText("Ajouter");
        ajouterDB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ajouterDBActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(titreA))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 337, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(tagA4, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(tagA1, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(tagA2, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(tagA3, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(ajouterDB)))
                .addContainerGap(345, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(titreA, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 132, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(100, 100, 100)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tagA1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tagA2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tagA3, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tagA4, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ajouterDB))
                .addGap(27, 27, 27))
        );

        jTabbedPane1.addTab("Ajouter", jPanel1);

        jLabel6.setText("Titre");

        titreR.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                titreRKeyReleased(evt);
            }
        });

        jLabel7.setText("Code");

        jLabel2.setText("/////////////Recherche///////////////");

        jLabel3.setText("/////////////////Resultat de Recherche///////////////////////");

        jLabel10.setText("Titre");

        boutonSupprimer.setText("Supprimer");
        boutonSupprimer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boutonSupprimerActionPerformed(evt);
            }
        });

        affichageCodeR.setEditable(false);
        affichageCodeR.setColumns(20);
        affichageCodeR.setRows(5);
        jScrollPane1.setViewportView(affichageCodeR);

        resultatTitre.setEditable(false);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, 86, Short.MAX_VALUE)
                            .addComponent(jLabel10)
                            .addComponent(resultatTitre))
                        .addGap(26, 26, 26)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(titreR)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(87, 87, 87)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 563, Short.MAX_VALUE)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel3))))
                        .addContainerGap(16, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(0, 676, Short.MAX_VALUE)
                        .addComponent(boutonSupprimer)
                        .addGap(3, 3, 3))))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(276, 276, 276)
                .addComponent(jLabel2)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addGap(50, 50, 50)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(titreR, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(66, 66, 66)
                .addComponent(jLabel3)
                .addGap(53, 53, 53)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(resultatTitre, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(boutonSupprimer, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)
                .addGap(20, 20, 20))
        );

        jTabbedPane1.addTab("Rechercher", jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ajouterDBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ajouterDBActionPerformed
        ajouter();
        cc.setAfficher("Code ajouté en ligne de commande");
        cc.setVisible(true);
    }//GEN-LAST:event_ajouterDBActionPerformed

    private void boutonSupprimerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boutonSupprimerActionPerformed
        supprimer();
        this.affichageCodeR.setText("");
        this.resultatTitre.setText("");
        cc.setAfficher("Code supprimé de la ligne de commande");
        cc.setVisible(true);
    }//GEN-LAST:event_boutonSupprimerActionPerformed

    private void titreRKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_titreRKeyReleased
        Connection connection = null;
        PreparedStatement requete = null;
        ResultSet resultat = null;

        try {
            Class.forName("org.postgresql.Driver"); // chargement du pilote (driver) permettant d'accéder au SGBDR
            connection = DriverManager.getConnection("jdbc:postgresql:db_catalogue", "administrator", "administrator"); // chemin de la base, utilisateur, mot de passe
        } catch(ClassNotFoundException e) {
            System.err.println("erreur driver non trouvé");
            e.printStackTrace();
            System.exit(1);
        } catch(SQLException e) {
            System.err.println("erreur SQL au moment de la connection");
            e.printStackTrace();
            System.exit(1);
        }
        /* and (tag1 like ?) and (tag2 like ?) and (tag3 like ?) and (tag4 like ?)*/
        try {
            requete = connection.prepareStatement("select * from listecode where (titre like ?) order by titre asc");
            requete.setString(1, this.titreR.getText()+'%');
            /*requete.setString(2, "this.tagR1.getText()+'%'");
            requete.setString(3, "this.tagR2.getText()+'%'");
            requete.setString(4, "this.tagR3.getText()+'%'");
            requete.setString(5, "this.tagR4.getText()+'%'");*/
            resultat = requete.executeQuery();
            while (resultat.next() && titreR.getText() != "") {
                String titre = resultat.getString("titre");
                String code = resultat.getString("code");
                resultatTitre.setText(titre);
                affichageCodeR.setText(code);
            }
        } catch(SQLException e) {
            e.printStackTrace();
            System.err.println("erreur lors de la sélection");
            System.exit(1);
        }
        
        if (titreR.getText().isEmpty()) {
            this.affichageCodeR.setText("");
            this.resultatTitre.setText("");
        }
    }//GEN-LAST:event_titreRKeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
      

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Main().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea affichageCodeR;
    private javax.swing.JButton ajouterDB;
    private javax.swing.JButton boutonSupprimer;
    private javax.swing.JTextArea codeA;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField resultatTitre;
    private javax.swing.JTextField tagA1;
    private javax.swing.JTextField tagA2;
    private javax.swing.JTextField tagA3;
    private javax.swing.JTextField tagA4;
    private javax.swing.JTextField titreA;
    private javax.swing.JTextField titreR;
    // End of variables declaration//GEN-END:variables
}